/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleCpp.js
 */

#include "RNCKakaoUserSpecJSI.h"

namespace facebook::react {

static jsi::Value __hostFunction_NativeKakaoUserCxxSpecJSI_isKakaoTalkLoginAvailable(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeKakaoUserCxxSpecJSI *>(&turboModule)->isKakaoTalkLoginAvailable(
    rt
  );
}
static jsi::Value __hostFunction_NativeKakaoUserCxxSpecJSI_login(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeKakaoUserCxxSpecJSI *>(&turboModule)->login(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asArray(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt).asArray(rt),
    count <= 2 ? throw jsi::JSError(rt, "Expected argument in position 2 to be passed") : args[2].asBool(),
    count <= 3 || args[3].isUndefined() ? std::nullopt : std::make_optional(args[3].asObject(rt).asArray(rt))
  );
}
static jsi::Value __hostFunction_NativeKakaoUserCxxSpecJSI_logout(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeKakaoUserCxxSpecJSI *>(&turboModule)->logout(
    rt
  );
}
static jsi::Value __hostFunction_NativeKakaoUserCxxSpecJSI_unlink(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeKakaoUserCxxSpecJSI *>(&turboModule)->unlink(
    rt
  );
}
static jsi::Value __hostFunction_NativeKakaoUserCxxSpecJSI_isLogined(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeKakaoUserCxxSpecJSI *>(&turboModule)->isLogined(
    rt
  );
}
static jsi::Value __hostFunction_NativeKakaoUserCxxSpecJSI_scopes(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeKakaoUserCxxSpecJSI *>(&turboModule)->scopes(
    rt,
    count <= 0 || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asObject(rt).asArray(rt))
  );
}
static jsi::Value __hostFunction_NativeKakaoUserCxxSpecJSI_revokeScopes(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeKakaoUserCxxSpecJSI *>(&turboModule)->revokeScopes(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asArray(rt)
  );
}
static jsi::Value __hostFunction_NativeKakaoUserCxxSpecJSI_serviceTerms(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeKakaoUserCxxSpecJSI *>(&turboModule)->serviceTerms(
    rt
  );
}
static jsi::Value __hostFunction_NativeKakaoUserCxxSpecJSI_shippingAddresses(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeKakaoUserCxxSpecJSI *>(&turboModule)->shippingAddresses(
    rt
  );
}
static jsi::Value __hostFunction_NativeKakaoUserCxxSpecJSI_me(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeKakaoUserCxxSpecJSI *>(&turboModule)->me(
    rt
  );
}
static jsi::Value __hostFunction_NativeKakaoUserCxxSpecJSI_getAccessToken(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeKakaoUserCxxSpecJSI *>(&turboModule)->getAccessToken(
    rt
  );
}

NativeKakaoUserCxxSpecJSI::NativeKakaoUserCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("RNCKakaoUser", jsInvoker) {
  methodMap_["isKakaoTalkLoginAvailable"] = MethodMetadata {0, __hostFunction_NativeKakaoUserCxxSpecJSI_isKakaoTalkLoginAvailable};
  methodMap_["login"] = MethodMetadata {4, __hostFunction_NativeKakaoUserCxxSpecJSI_login};
  methodMap_["logout"] = MethodMetadata {0, __hostFunction_NativeKakaoUserCxxSpecJSI_logout};
  methodMap_["unlink"] = MethodMetadata {0, __hostFunction_NativeKakaoUserCxxSpecJSI_unlink};
  methodMap_["isLogined"] = MethodMetadata {0, __hostFunction_NativeKakaoUserCxxSpecJSI_isLogined};
  methodMap_["scopes"] = MethodMetadata {1, __hostFunction_NativeKakaoUserCxxSpecJSI_scopes};
  methodMap_["revokeScopes"] = MethodMetadata {1, __hostFunction_NativeKakaoUserCxxSpecJSI_revokeScopes};
  methodMap_["serviceTerms"] = MethodMetadata {0, __hostFunction_NativeKakaoUserCxxSpecJSI_serviceTerms};
  methodMap_["shippingAddresses"] = MethodMetadata {0, __hostFunction_NativeKakaoUserCxxSpecJSI_shippingAddresses};
  methodMap_["me"] = MethodMetadata {0, __hostFunction_NativeKakaoUserCxxSpecJSI_me};
  methodMap_["getAccessToken"] = MethodMetadata {0, __hostFunction_NativeKakaoUserCxxSpecJSI_getAccessToken};
}


} // namespace facebook::react
