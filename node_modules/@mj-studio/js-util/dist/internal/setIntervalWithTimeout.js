export class TimeoutHandler {
    constructor() {
        this.handlerRef = { id: -1 };
        this.cleared = false;
    }
    get handler() {
        return this.handlerRef.id;
    }
    set handler(n) {
        this.handlerRef.id = n;
    }
    clear() {
        this.cleared = true;
        clearTimeout(this.handlerRef.id);
    }
}
export function setIntervalWithTimeout(callback, intervalMs) {
    const handleWrapper = new TimeoutHandler();
    const timeout = () => {
        handleWrapper.handler = setTimeout(() => {
            callback(() => {
                handleWrapper.clear();
            });
            if (!handleWrapper.cleared) {
                timeout();
            }
        }, intervalMs);
    };
    timeout();
    return () => {
        handleWrapper.clear();
    };
}
//# sourceMappingURL=setIntervalWithTimeout.js.map